name: RPi Image Modifier
description: Raspberry Pi OS Image Modifier

inputs:
  base-image-url:
    description: 'Base Raspberry Pi OS image URL (required)'
    required: true
  script-path:
    description: 'Path of script to run to modify image (one of script-path or run is required)'
    required: false
    default: ''
  run:
    description: 'Script contents run to modify image (one of script-path or run is required)'
    required: false
    default: ''
  env-vars:
    description: 'Comma-separated environment variables to pass to the script, example: ONE,TWO,THREE'
    required: false
    default: ''
  image-path:
    description: 'What to name the modified image'
    required: false
    default: 'rpi-os-modified.img'
  mount-repository:
    description: 'Temporary mount repository at /mounted-github-repo/ for copying files'
    required: false
    default: 'true'
  compress-with-xz:
    description: 'Compress final image with xz (image-path will have an .xz extension added)'
    required: false
    default: 'false'
  shrink:
    description: 'Shrink final image using PiShrink (https://github.com/Drewsif/PiShrink)'
    required: false
    default: 'true'
  shell:
    description: 'Shell in container to execute script'
    required: false
    default: '/bin/bash'
  cache:
    description: 'Cache image file located at base-image-url'
    required: false
    default: 'false'
  image-maxsize:
    description: 'That maximum size of the modified image (needs to fit on disk)'
    required: false
    default: '12G'

outputs:
  image-path:
    description: 'Filename of image, will be same as image-path unless compress-with-xz is set in which case it will have a .xz extension'
    value: ${{ steps.modify-image.outputs.image-path }}
  image-size:
    description: 'Size of image, as it was before xz compression was optionally applied'
    value: ${{ steps.modify-image.outputs.image-size }}

runs:
  using: "composite"
  steps:
    -
      name: Set cache key
      id: cache-key
      if: inputs.cache == 'true'
      shell: bash
      env:
        ARG_BASE_IMAGE_URL: ${{ inputs.base-image-url }}
      run: |
        echo "key=rpi-img-mod-2::$(basename "${ARG_BASE_IMAGE_URL}")" >> "${GITHUB_OUTPUT}"
    -
      name: Use cache
      if: inputs.cache == 'true'
      uses: actions/cache@v3
      with:
        key: ${{ steps.cache-key.outputs.key }}
        path: /tmp/rpi-cached.img
    -
      name: Modify Raspberry Pi OS image
      shell: bash
      id: modify-image
      env:
        __ARG_BASE_IMAGE_URL: ${{ inputs.base-image-url }}
        __ARG_SCRIPT_PATH: ${{ inputs.script-path }}
        __ARG_RUN: ${{ inputs.run }}
        __ARG_ENV_VARS: ${{ inputs.env-vars}}
        __ARG_IMAGE_PATH: ${{ inputs.image-path }}
        __ARG_MOUNT_REPOSITORY: ${{ inputs.mount-repository == 'true' && '1' || '' }}
        __ARG_COMPRESS_WITH_XZ: ${{ inputs.compress-with-xz == 'true' && '1' || '' }}
        __ARG_SHRINK: ${{ inputs.shrink == 'true' && '1' || '' }}
        __ARG_SHELL: ${{ inputs.shell }}
        __ARG_CACHE: ${{ inputs.cache == 'true' && '1' || '' }}
        __ARG_IMAGE_MAXSIZE: ${{ inputs.image-maxsize }}
      run: "${GITHUB_ACTION_PATH}/action.sh"
